<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-20T01:26:24 IST" name="Suite" finished-at="2025-03-20T01:28:38 IST" duration-ms="133368">
    <groups>
    </groups>
    <test started-at="2025-03-20T01:26:24 IST" name="Test" finished-at="2025-03-20T01:28:38 IST" duration-ms="133368">
      <class name="testscripts.smoke.functional.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.smoke.functional.LoginTest@3cee53dc]" started-at="2025-03-20T01:28:31 IST" name="setup" finished-at="2025-03-20T01:28:36 IST" duration-ms="4980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginForValidCredentials()[pri:0, instance:testscripts.smoke.functional.LoginTest@3cee53dc]" started-at="2025-03-20T01:28:36 IST" name="verifyLoginForValidCredentials" finished-at="2025-03-20T01:28:38 IST" duration-ms="1932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginForValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testscripts.smoke.functional.LoginTest@3cee53dc]" started-at="2025-03-20T01:28:38 IST" name="tearDown" finished-at="2025-03-20T01:28:38 IST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testscripts.smoke.functional.LoginTest -->
      <class name="testscripts.smoke.ui.LibrayTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.smoke.ui.LibrayTest@1a28aef1]" started-at="2025-03-20T01:26:24 IST" name="setup" finished-at="2025-03-20T01:26:32 IST" duration-ms="7458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyQuestionCount()[pri:0, instance:testscripts.smoke.ui.LibrayTest@1a28aef1]" started-at="2025-03-20T01:26:32 IST" name="verifyQuestionCount" finished-at="2025-03-20T01:26:37 IST" duration-ms="4790" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[All Question count was 2876 where as sum of other type questions 200 expected [2876] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: All Question count was 2876 where as sum of other type questions 200 expected [2876] but found [200]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at testscripts.smoke.ui.LibrayTest.verifyQuestionCount(LibrayTest.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyQuestionCount -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testscripts.smoke.ui.LibrayTest@1a28aef1]" started-at="2025-03-20T01:26:37 IST" name="tearDown" finished-at="2025-03-20T01:26:38 IST" duration-ms="637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyQuestionCount status=FAILURE method=LibrayTest.verifyQuestionCount()[pri:0, instance:testscripts.smoke.ui.LibrayTest@1a28aef1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testscripts.smoke.ui.LibrayTest -->
      <class name="testscripts.smoke.ui.DashboardTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.smoke.ui.DashboardTest@344426bf]" started-at="2025-03-20T01:26:38 IST" name="setup" finished-at="2025-03-20T01:26:44 IST" duration-ms="6642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyDashboardUiElements()[pri:0, instance:testscripts.smoke.ui.DashboardTest@344426bf]" started-at="2025-03-20T01:26:44 IST" name="verifyDashboardUiElements" finished-at="2025-03-20T01:26:46 IST" duration-ms="1533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDashboardUiElements -->
      </class> <!-- testscripts.smoke.ui.DashboardTest -->
      <class name="testscripts.smoke.functional.CreateQuestionTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:26:46 IST" name="setup" finished-at="2025-03-20T01:26:53 IST" duration-ms="6885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyCreateQuestion()[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:26:53 IST" name="verifyCreateQuestion" finished-at="2025-03-20T01:27:04 IST" duration-ms="11799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateQuestion -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:27:04 IST" name="tearDown" finished-at="2025-03-20T01:27:05 IST" duration-ms="218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateQuestion status=SUCCESS method=CreateQuestionTest.verifyCreateQuestion()[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:27:08 IST" name="setup" finished-at="2025-03-20T01:27:16 IST" duration-ms="7914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyCreateQuestionDataDriven(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:27:16 IST" name="verifyCreateQuestionDataDriven" data-provider="getDataForCreateQuestion" finished-at="2025-03-20T01:27:23 IST" duration-ms="7145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local Variable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Can we declare local variable as private]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Option 2]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Easy]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Nov-Batch]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[programming languages: java]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[object-oriented]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Question published successfully]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateQuestionDataDriven -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:27:23 IST" name="tearDown" finished-at="2025-03-20T01:27:23 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateQuestionDataDriven status=SUCCESS method=CreateQuestionTest.verifyCreateQuestionDataDriven(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:27:23 IST" name="setup" finished-at="2025-03-20T01:27:30 IST" duration-ms="7432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyCreateQuestionDataDriven(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:27:30 IST" name="verifyCreateQuestionDataDriven" data-provider="getDataForCreateQuestion" finished-at="2025-03-20T01:27:37 IST" duration-ms="6229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Access Non modifer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[static final private methods are allowed in java]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Option 1]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Medium]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Nov-Batch]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[programming languages: java]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[object-oriented]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Question published successfully]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateQuestionDataDriven -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:27:37 IST" name="tearDown" finished-at="2025-03-20T01:27:37 IST" duration-ms="218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateQuestionDataDriven status=SUCCESS method=CreateQuestionTest.verifyCreateQuestionDataDriven(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:27:37 IST" name="setup" finished-at="2025-03-20T01:27:44 IST" duration-ms="7201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyCreateQuestionDataDriven(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:27:44 IST" name="verifyCreateQuestionDataDriven" data-provider="getDataForCreateQuestion" finished-at="2025-03-20T01:27:59 IST" duration-ms="15019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Inheritance]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Choose the correct answer from given options, both classes are in parent child relationship]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[final class can be inherited if both classes are in same package]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[protected class can be inherited outside of the package]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[we can override protected methods outside of the package]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[if class is default and constructor is public, still we can inherit class outside of package]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Option 3]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Hard]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Nov-Batch]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[programming languages: java]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[object-oriented]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Question published successfully]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateQuestionDataDriven -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:27:59 IST" name="tearDown" finished-at="2025-03-20T01:27:59 IST" duration-ms="213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateQuestionDataDriven status=SUCCESS method=CreateQuestionTest.verifyCreateQuestionDataDriven(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:27:59 IST" name="setup" finished-at="2025-03-20T01:28:06 IST" duration-ms="6452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyCreateQuestionDataDriven(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:28:06 IST" name="verifyCreateQuestionDataDriven" data-provider="getDataForCreateQuestion" finished-at="2025-03-20T01:28:15 IST" duration-ms="9326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Which exception is thrown when a class is not found at runtime?]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ClassNotFoundException]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NullPointerException]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[IOException]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ArithmeticException]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Option 1]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Easy]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Nov-Batch]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[programming languages: java]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[annotations]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Question published successfully]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateQuestionDataDriven -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:28:15 IST" name="tearDown" finished-at="2025-03-20T01:28:15 IST" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateQuestionDataDriven status=SUCCESS method=CreateQuestionTest.verifyCreateQuestionDataDriven(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:28:15 IST" name="setup" finished-at="2025-03-20T01:28:22 IST" duration-ms="6900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyCreateQuestionDataDriven(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:28:22 IST" name="verifyCreateQuestionDataDriven" data-provider="getDataForCreateQuestion" finished-at="2025-03-20T01:28:30 IST" duration-ms="8321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Where are string literals stored in Java?]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Heap Memory]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[String Pool]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Stack Memory]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Metaspace]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Option 2]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Medium]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Nov-Batch]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[programming languages: java]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[garbage collection]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Question published successfully]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateQuestionDataDriven -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d]" started-at="2025-03-20T01:28:30 IST" name="tearDown" finished-at="2025-03-20T01:28:31 IST" duration-ms="241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateQuestionDataDriven status=SUCCESS method=CreateQuestionTest.verifyCreateQuestionDataDriven(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testscripts.smoke.functional.CreateQuestionTest@50194e8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testscripts.smoke.functional.CreateQuestionTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
